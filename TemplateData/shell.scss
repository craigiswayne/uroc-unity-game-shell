@use "rotate_to_landscape";
@use "dialogs";

.lil-gui .controller button {
  text-align: left;
  text-indent: 10px;
}


* {
  box-sizing: border-box;
}

body {
  --color-secondary: #ffcc00;
  --color-secondary-lighter: #FFF5CC;
  --background-mask: rgba(0, 0, 0, 0.8);
  width: 100vw;
  height: 100vh;
  font-family: sans-serif;
  font-size: 16px;
  padding: 0;
  margin: 0;
  background-color: black;
  max-width: 100vw;
  max-height: 100vh;
  overflow: hidden;
}

img {
  max-width: 100%;
  max-height: 100%;
  width: auto;
  height: auto;
}

.color-secondary {
  color: var(--color-secondary);
}

[href], button, [onclick] {
  cursor: pointer;
}

#splash {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 1;
  display: none;
  background: black;

  .inner {
    position: fixed;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    height: min(300px, 50vh);

    svg {
      width: 100%;
      height: 100%;

      circle {
        transition: stroke-dashoffset 0.3s ease;
      }
    }

    video {
      max-height: 80vh;
      display: block;
    }
  }
}

#unity-canvas {
  outline: none;
  max-width: 100vw;
  max-height: 100vh;
  display: block;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  @media (min-aspect-ratio: 16/9) {
      height: 100%;
      width: calc(100vh * (16 / 9));
  }

  /* When screen is narrower than 16:9 (portrait or narrow landscape) */
  @media (max-aspect-ratio: 16/9) {
      width: 100%;
      height: calc(100vw * (9 / 16));
  }

  /* When screen is exactly 16:9 */
  @media (aspect-ratio: 16/9) {
      width: 100vw;
      height: 100vh;
  }
}

aside#quick-actions {
  position: fixed;
  top: 0;
  right: 0;
  background: rgba(0, 0, 0, 0.1);
  display: inline-flex;
  flex-direction: column;
  padding: 1rem 0.5rem 0 0.5rem;
  border-radius: 0 0 0 10px;
  user-select: none;
  transition: all 0.3s ease;
  transform: translateY(-10px);
  visibility: hidden;
  opacity: 0;

  &.active {
    transform: translateY(0);
    visibility: visible;
    opacity: 1;
  }


  .toggle,
  a,
  button {
    height: 40px;
    width: 40px;
    display: block;
    background: none;
    border: none;
    text-align: center;
    padding: 0;
    margin: 0 0 1rem 0;
    outline: none;
  }

  button.action[disabled] {
    color: gray;
    pointer-events: none;
    cursor: not-allowed;

    svg {
      color: inherit;
    }
  }

  svg {
    color: white;
    max-width: 40px;
    max-height: 40px;
  }

  .toggle {
    *  {
      pointer-events: none;
    }
    input[type=checkbox] {
      position: absolute;
      z-index: -1;
      visibility: hidden;
    }

    svg {
      display: none;
    }

    input[type='checkbox'] {
      &:checked ~ svg.on {
        display: block;
      }

      &:not(:checked) ~ svg.off {
        display: block;
      }
    }
  }

  .sub-menu {
    position: relative;
    display: grid;
    grid-template-rows: 0fr;
    transition: grid-template-rows 0.5s ease-in-out;
  }

  #toggle_menu:has(input:checked) ~ .sub-menu {
    grid-template-rows: 1fr;
  }

  .sub-menu-inner {
    overflow: hidden;
  }
}


.grid.paytable {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 3em 0.5em;
  font-size: 0.9em;
  margin: 1em 0;

  @media (min-width: 600px) {
    grid-template-columns: repeat(3, 1fr);
  }

  @media (min-width: 800px) {
    grid-template-columns: repeat(4, 1fr);
  }

  @media (min-width: 900px) {
    grid-template-columns: repeat(5, 1fr);
  }


  @media (min-width: 1200px) {
    grid-template-columns: repeat(6, 1fr);
  }

  .item {
    display: flex;
    flex-direction: column;
  }

  .item .symbol_container {
    min-height: 100px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: end;
    margin-bottom: 0.5em;
  }

  .item .data {
    flex-grow: 1;
    display: inline-flex;
    flex-direction: column;
    align-self: center;
  }

  .item .data .row {
    display: flex;
  }

  .item .data .row .count {
    color: yellow;
    margin-right: 0.5em;
  }
}

#game_rules {
  h2 {
    text-align: center;
  }
}


img.symbol {
  max-width: 80px;
  align-self: center;
}

.fade-out {
  animation: fade-the-fuck-out 0.5s cubic-bezier(0.550, 0.085, 0.680, 0.530) both;
}

@-webkit-keyframes fade-the-fuck-out {
  0% {
    opacity: 1;
  }
  99% {
    opacity: 0;
  }
  100% {
    opacity: 0;
    display: none;
  }
}

@keyframes fade-the-fuck-out {
  0% {
    opacity: 1;
  }
  99% {
    opacity: 0;
  }
  100% {
    opacity: 0;
    display: none;
  }
}